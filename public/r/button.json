{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/button/Button.vue",
      "content": "<template>\n\t<button\n\t\t:class=\"computedClass\"\n\t\t:type=\"type\"\n\t\t:disabled=\"disabled\"\n\t\tv-bind=\"$attrs\"\n\t\t@click=\"onClick\"\n\t>\n\t\t<span v-if=\"$slots.icon\" class=\"mr-2 flex items-center\">\n\t\t\t<slot name=\"icon\" />\n\t\t</span>\n\t\t<span><slot /></span>\n\t</button>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n\tvariant: {\n\t\ttype: String,\n\t\tdefault: 'default',\n\t\tvalidator: (v: string) => ['default', 'outline', 'ghost', 'link', 'destructive'].includes(v),\n\t},\n\tsize: {\n\t\ttype: String,\n\t\tdefault: 'md',\n\t\tvalidator: (v: string) => ['sm', 'md', 'lg'].includes(v),\n\t},\n\ttype: {\n\t\ttype: String as () => 'button' | 'submit' | 'reset',\n\t\tdefault: 'button',\n\t\tvalidator: (v: string) => ['button', 'submit', 'reset'].includes(v),\n\t},\n\tdisabled: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n});\n\nconst emit = defineEmits(['click']);\n\nconst baseClass =\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background';\n\nconst variantClasses: Record<string, string> = {\n\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\toutline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\tlink: 'underline-offset-4 hover:underline text-primary',\n\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n};\n\nconst sizeClasses: Record<string, string> = {\n\tsm: 'h-8 px-3 rounded-md',\n\tmd: 'h-10 px-4 rounded-md',\n\tlg: 'h-12 px-8 rounded-md',\n};\n\nconst computedClass = computed(() => {\n\treturn [\n\t\tbaseClass,\n\t\tvariantClasses[props.variant] || variantClasses.default,\n\t\tsizeClasses[props.size] || sizeClasses.md,\n\t].join(' ');\n});\n\nfunction onClick(e: MouseEvent) {\n\tif (!props.disabled) emit('click', e);\n}\n</script>\n\n<style scoped>\n/* Ajoutez ici des styles personnalis√©s si besoin */\n</style>\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/button/index.ts",
      "content": "export { default as Button } from './Button.vue';\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
