// Extraction of child components used in the template of a Vue SFC

/**
 * Extracts child components used in the template of a Vue SFC.
 * @param templateContent The template content.
 * @returns An array of child component names used.
 */
export const extractChildComponents = (templateContent: string): string[] => {
  // List of native HTML tags to ignore
  const htmlTags = new Set([
    'div',
    'span',
    'input',
    'button',
    'form',
    'label',
    'ul',
    'li',
    'ol',
    'table',
    'thead',
    'tbody',
    'tr',
    'td',
    'th',
    'select',
    'option',
    'textarea',
    'img',
    'a',
    'p',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'br',
    'hr',
    'pre',
    'code',
    'blockquote',
    'em',
    'strong',
    'b',
    'i',
    'u',
    'small',
    'big',
    'nav',
    'header',
    'footer',
    'main',
    'section',
    'article',
    'aside',
    'figure',
    'figcaption',
    'video',
    'audio',
    'canvas',
    'svg',
    'path',
    'g',
    'circle',
    'rect',
    'ellipse',
    'line',
    'polyline',
    'polygon',
    'text',
    'defs',
    'symbol',
    'use',
    'clipPath',
    'foreignObject',
    'iframe',
    'object',
    'embed',
    'source',
    'track',
    'map',
    'area',
    'meta',
    'link',
    'style',
    'script',
    'noscript',
    'html',
    'body',
    'head',
    'title',
    'base',
    'col',
    'colgroup',
    'datalist',
    'fieldset',
    'legend',
    'optgroup',
    'output',
    'param',
    'progress',
    'samp',
    'summary',
    'template',
    'time',
    'wbr',
    'details',
    'mark',
    'meter',
    'rp',
    'rt',
    'ruby',
    'sup',
    'sub',
    'del',
    'ins',
    'caption',
    'tbody',
    'tfoot',
    'thead',
    'tr',
    'th',
    'td',
  ]);
  // Regex to find all tags
  const tagRegex = /<([A-Z][\w-]*)\b/g;
  const found = new Set<string>();
  let match;
  while ((match = tagRegex.exec(templateContent))) {
    const tag = match[1];
    if (tag && !htmlTags.has(tag.toLowerCase())) {
      found.add(tag);
    }
  }
  return Array.from(found);
};
